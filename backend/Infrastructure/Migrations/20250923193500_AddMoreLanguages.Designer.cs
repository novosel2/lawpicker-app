// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250923193500_AddMoreLanguages")]
    partial class AddMoreLanguages
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.DocumentLanguage", b =>
                {
                    b.Property<string>("CelexNumber")
                        .HasColumnType("text");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("character varying(3)");

                    b.HasKey("CelexNumber", "LanguageCode");

                    b.HasIndex("LanguageCode");

                    b.ToTable("DocumentLanguages");
                });

            modelBuilder.Entity("Domain.Entities.Language", b =>
                {
                    b.Property<string>("LanguageCode")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("LanguageName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.HasKey("LanguageCode");

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            LanguageCode = "BUL",
                            LanguageName = "Bulgarian"
                        },
                        new
                        {
                            LanguageCode = "HRV",
                            LanguageName = "Croatian"
                        },
                        new
                        {
                            LanguageCode = "CES",
                            LanguageName = "Czech"
                        },
                        new
                        {
                            LanguageCode = "DAN",
                            LanguageName = "Danish"
                        },
                        new
                        {
                            LanguageCode = "NLD",
                            LanguageName = "Dutch"
                        },
                        new
                        {
                            LanguageCode = "ENG",
                            LanguageName = "English"
                        },
                        new
                        {
                            LanguageCode = "EST",
                            LanguageName = "Estonian"
                        },
                        new
                        {
                            LanguageCode = "FIN",
                            LanguageName = "Finnish"
                        },
                        new
                        {
                            LanguageCode = "FRA",
                            LanguageName = "French"
                        },
                        new
                        {
                            LanguageCode = "DEU",
                            LanguageName = "German"
                        },
                        new
                        {
                            LanguageCode = "ELL",
                            LanguageName = "Greek"
                        },
                        new
                        {
                            LanguageCode = "HUN",
                            LanguageName = "Hungarian"
                        },
                        new
                        {
                            LanguageCode = "GLE",
                            LanguageName = "Irish"
                        },
                        new
                        {
                            LanguageCode = "ITA",
                            LanguageName = "Italian"
                        },
                        new
                        {
                            LanguageCode = "LAV",
                            LanguageName = "Latvian"
                        },
                        new
                        {
                            LanguageCode = "LIT",
                            LanguageName = "Lithuanian"
                        },
                        new
                        {
                            LanguageCode = "MLT",
                            LanguageName = "Maltese"
                        },
                        new
                        {
                            LanguageCode = "POL",
                            LanguageName = "Polish"
                        },
                        new
                        {
                            LanguageCode = "POR",
                            LanguageName = "Portuguese"
                        },
                        new
                        {
                            LanguageCode = "RON",
                            LanguageName = "Romanian"
                        },
                        new
                        {
                            LanguageCode = "SLK",
                            LanguageName = "Slovak"
                        },
                        new
                        {
                            LanguageCode = "SLV",
                            LanguageName = "Slovenian"
                        },
                        new
                        {
                            LanguageCode = "SPA",
                            LanguageName = "Spanish"
                        },
                        new
                        {
                            LanguageCode = "SWE",
                            LanguageName = "Swedish"
                        });
                });

            modelBuilder.Entity("Domain.Entities.LawDocument", b =>
                {
                    b.Property<string>("Celex")
                        .HasColumnType("text");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<char>("Type")
                        .HasColumnType("character(1)");

                    b.HasKey("Celex");

                    b.HasIndex("Celex")
                        .IsUnique();

                    b.ToTable("LawDocuments");
                });

            modelBuilder.Entity("Domain.Entities.DocumentLanguage", b =>
                {
                    b.HasOne("Domain.Entities.LawDocument", "LawDocument")
                        .WithMany("DocumentLanguages")
                        .HasForeignKey("CelexNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Language", "Language")
                        .WithMany("DocumentLanguages")
                        .HasForeignKey("LanguageCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("LawDocument");
                });

            modelBuilder.Entity("Domain.Entities.Language", b =>
                {
                    b.Navigation("DocumentLanguages");
                });

            modelBuilder.Entity("Domain.Entities.LawDocument", b =>
                {
                    b.Navigation("DocumentLanguages");
                });
#pragma warning restore 612, 618
        }
    }
}
